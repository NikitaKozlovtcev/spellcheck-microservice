[tool.poetry]
name = "spellcheck-microservice"
version = "3.2.0"
description = "Microservice for spellchecking"
authors = ["Denis Anikin <ad@xfenix.ru>"]
license = "MIT"

[tool.poetry.dependencies]
python = "^3.10"
fastapi = "*"
gunicorn = "*"
uvicorn = "*"
loguru = "*"
pyenchant = "*"
toml = "*"
pylru = "*"
aiopath = "*"
anyio = "*"
sentry-sdk = "*"

[tool.poetry.dev-dependencies]
pytest = "*"
pytest-cov = "*"
pytest-xdist = "*"
mypy = "*"
requests = "*"
types-requests = "*"
Faker = "*"
vulture = "*"
types-toml = "*"
pytest-repeat = "*"
ruff = "*"

[tool.isort]
line_length = 120
multi_line_output = 3
include_trailing_comma = true
lines_after_imports = 2
lexicographical = true
sections = ["FUTURE", "STDLIB", "FIRSTPARTY", "THIRDPARTY", "LOCALFOLDER"]
no_lines_before = ["STDLIB", "THIRDPARTY"]
known_third_party = []
known_local_folder = ["whole_app",]

[tool.black]
line-length = 120

[tool.ruff]
fix = true
line-length = 120
select = ["ALL"]
ignore = ["D100", "D101", "D102", "D103", "D104", "D105", "D106", "D107", "D203", "D213", "FA102", "I"]

[tool.ruff.extend-per-file-ignores]
"tests/*.py" = ["ANN001", "ANN002", "ANN003", "ANN401", "S101", "PLR2004", "S311"]
"tests/_fixtures.py" = ["E501"]

[tool.mypy]
ignore_missing_imports = true

[tool.vulture]
exclude = ["whole_app/settings.py"]

[tool.pytest.ini_options]
addopts = "--cov . --cov-report term-missing"

[tool.coverage.run]
omit = ["scripts/*"]

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
