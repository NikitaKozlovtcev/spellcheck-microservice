[tool.poetry]
name = "spellcheck-microservice"
version = "1.0.0"
description = "Microservice for spellchecking"
authors = ["Denis Anikin <ad@xfenix.ru>"]
license = "MIT"

[tool.poetry.dependencies]
python = "^3.10"
fastapi = "^0.78.0"
pyspellchecker = "^0.6.3"
gunicorn = "^20.1.0"
uvicorn = "^0.17.6"

[tool.poetry.dev-dependencies]
pytest = "^7.1.2"
pytest-cov = "^3.0.0"
pytest-xdist = "^2.5.0"
pylint = "^2.14.0"
mypy = "^0.960"
requests = "^2.27.1"
types-requests = "^2.27.30"
Faker = "^13.12.0"

[tool.isort]
line_length = 120
multi_line_output = 3
include_trailing_comma = true
lines_after_imports = 2
lexicographical = true
sections = ["FUTURE", "STDLIB", "FIRSTPARTY", "THIRDPARTY", "LOCALFOLDER"]
no_lines_before = ["STDLIB", "THIRDPARTY"]
known_third_party = []
known_local_folder = ["whole_app",]

[tool.black]
line-length = 120

[tool.pytest.ini_options]
addopts = "--cov . --cov-report term-missing"

[tool.pylint.format]
max-line-length = 120

[tool.pylint.messages_control]
disable=["logging-fstring-interpolation"]

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
