[tool.poetry]
name = "spellcheck-microservice"
version = "1.0.0"
description = "Microservice for spellchecking"
authors = ["Denis Anikin <ad@xfenix.ru>"]
license = "MIT"

[tool.poetry.dependencies]
python = "^3.10"
fastapi = "*"
gunicorn = "*"
uvicorn = "*"
loguru = "*"
pyenchant = "*"
toml = "*"
pylru = "*"
aiopath = "*"
anyio = "*"
sentry-sdk = "^1.7.2"

[tool.poetry.dev-dependencies]
pytest = "*"
pytest-cov = "*"
pytest-xdist = "*"
pylint = "*"
mypy = "*"
requests = "*"
types-requests = "*"
Faker = "*"
vulture = "*"
types-toml = "*"
pytest-repeat = "*"

[tool.isort]
line_length = 120
multi_line_output = 3
include_trailing_comma = true
lines_after_imports = 2
lexicographical = true
sections = ["FUTURE", "STDLIB", "FIRSTPARTY", "THIRDPARTY", "LOCALFOLDER"]
no_lines_before = ["STDLIB", "THIRDPARTY"]
known_third_party = []
known_local_folder = ["whole_app",]

[tool.black]
line-length = 120

[tool.pytest.ini_options]
addopts = "--cov . --cov-report term-missing"

[tool.pylint.settings]
max-line-length = 120
disable=["logging-fstring-interpolation", "too-few-public-methods", "no-name-in-module", "wrong-import-order"]

[tool.mypy]
ignore_missing_imports = true

[tool.vulture]
exclude = ["whole_app/settings.py"]

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
