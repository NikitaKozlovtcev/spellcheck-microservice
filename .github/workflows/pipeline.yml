name: Main pipeline
on:
  push:
    branches:
      - "main"
      - "feature/**"
      - "hotfix/**"
      - "bugfix/**"
    tags:
      - v1.**
env:
  CONTAINER_BASE_NAME: spellcheck-microservice

jobs:
  # lint-and-test:
  #   runs-on: ubuntu-latest
  #   container:
  #     image: docker:20.10.16
  #   steps:
  #     - uses: actions/checkout@v3
  #     - run: |
  #         apk add make
  #         make build
  #         make lint-in-docker
  #         make test-in-docker

  # build-and-publish:
  #   needs: [lint-and-test]
  #   runs-on: ubuntu-latest
  #   if: startsWith(github.ref, 'refs/tags/v')
  #   steps:
  #     - uses: actions/checkout@v3
  #     - run: |
  #         export LAST_TAG=$(echo $(git describe --tags --abbrev=0))
  #         docker build -t $CONTAINER_BASE_NAME:latest .
  #         docker tag $CONTAINER_BASE_NAME:latest $CONTAINER_BASE_NAME:$LAST_TAG
  #         echo ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }} | docker login --username ${{ secrets.DOCKER_HUB_USERNAME }} --password-stdin
  #         docker push $CONTAINER_BASE_NAME:latest
  #         docker push $CONTAINER_BASE_NAME:$LAST_TAG
  #         docker tag
  #         docker logout
  build-and-publish:
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    steps:
      - uses: docker/setup-buildx-action@v2
      - uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
      - uses: docker/metadata-action@v4
        with:
          images: $CONTAINER_BASE_NAME
      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
